name: crackmapexec
base: core22
adopt-info: crackmapexec

license: GPL-3.0-or-later
source-code: https://github.com/Porchetta-Industries/CrackMapExec
issues: https://github.com/JitPatro/crackmapexec/issues

summary:  A swiss army knife for pentesting networks
description: |
  CrackMapExec (a.k.a CME) is a post-exploitation tool that helps automate assessing the security of large Active Directory networks. Built with stealth in mind, CME follows the concept of "Living off the Land": abusing built-in Active Directory features/protocols to achieve it's functionality and allowing it to evade most endpoint protection/IDS/IPS solutions.

  CME makes heavy use of the impacket library (developed by @asolino) for working with network protocols and performing a variety of post-exploitation techniques.

  Although meant to be used primarily for offensive purposes (e.g. red teams, internal pentest), CME can be used by blue teams as well to assess account privileges, find possible misconfigurations and simulate attack scenarios.

  CrackMapExec is developed by @byt3bl33d3r and @mpgn


grade: stable
confinement: strict
#compression: lzo

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
  - build-on: s390x
  
environment:
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  POETRY_VIRTUALENVS_PATH: $SNAP/.venv

apps:
  crackmapexec:
    command: run crackmapexec
    plugs: [home, network, network-bind]

  cme:
    command: run crackmapexec
    plugs: [home, network, network-bind]

  cmedb:
    command: run cmedb
    plugs: [home]


parts:
  crackmapexec:
    plugin: python
    source: https://github.com/Porchetta-Industries/CrackMapExec.git
    python-packages:
      - poetry

    build-packages:
      - build-essential
      - python3-pip
      - libffi-dev
      - libkrb5-dev
      - libssl-dev
      - libxml2-dev
      - libxslt1-dev
      - libjpeg-dev
      - rustc
      - cargo

    override-build: |
      craftctl default
      virtualenv -p py .venv
      poetry config virtualenvs.create false --local
      poetry lock --no-update
      poetry install
      chmod 644 ./poetry.toml
      cp -r ./* ./.v* $CRAFT_PRIME/
      echo -e '#!/bin/sh \n\nset -e\n\ncd $SNAP && poetry run "$@"' > $CRAFT_PART_INSTALL/run
      chmod +x $CRAFT_PART_INSTALL/run
      craftctl set version=$(git describe --tags)
      
# Cleanup
    override-prime: |
      craftctl default
      /bin/bash -O extglob
      rm -rf {lib,.venv/lib}/python3.10/site-packages/{pip*,setuptools*,wheel*,!(poetry*).dist-info}
      rm -rf .venv/src/*
